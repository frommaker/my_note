1.在想要存放的文件夹下右键点击 git bash；

2.到github复制想要下载的项目的ssh链接，通过终端输入  git clone ssh链接 分支名 来下载；
（不输入分支名则默认为main分支）
（也可以通过git init初始化仓库，然后git pull ssh链接 分支名 来下载）
或者新建一个git项目
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:frommaker/my_neovim.git
git push -u origin main


3.如果本地修改了项目，想要上传到github，可以在vscode或者直接在git终端输入：
git add ./修改的文件名  （或git add ./   表示全部暂存）
git commit -m "备注信息" （表示本地提交，可以一次性提交多个暂存，但每个暂存的说明信息都是相同的）
git push ssh链接 分支名 （表示上传到github）

4.此时就可以在github上看到了

5.若本地修改了文件，但想确定修改了什么，输入git diff 文件名 来查看
注意测试查看的是暂存区与工作区的区别，如果修改完并add之后便没有区别了
可以用git diff --cached来查看暂存区与仓库的区别


命令	                                                       含义
git init                                                             初始化 GIT 仓库
git config --global user.name "用户昵称"       配置 GIT 使用者的用户名
git config --global user.email "用户邮箱"       配置 GIT 使用者的邮箱
git add ./添加的文件名                                    将指定文件添加至暂存区，以备提交
git add ./                                                        将相对路径 ./ 下的所有文件添加至暂存区
git commit -m "说明信息"                              将存到暂存区的文件提交至 GIT 仓库(版本库)
git commit --all -m "说明信息"                       结合添加和修改，一次性将代码文件提交至 GIT 仓库
git status                                                        查看文件状态
git log                                                            查看日志(提交记录)
git log --oneline                                            查看日志，结果一行显示
git reset --hard head~n                                 版本回退n次，注意回退后用log看不到未来版本的信息
git reset --hard 版本号                                   切换至指定版本号的版本
git reflog                                                        列出操作过程中经历的所有版本号
git branch 分支名                                           创建分支
git branch                                                      查看所有分支
git branch -d 分支名                                      删除指定分支
git checkout 分支名                                       切换分支
git merge 指定分支                                        将指定分支合并到当前所在的分支
git push 云端仓库地址 分支名                         将项目文件推送到远程服务器指定的分支
git pull 云端仓库地址 分支名                          将云端的项目文件克隆至本地
ssh-keygen -t rsa -C "邮箱"                          生成公钥和私钥
ssh -T git@github.com                                测试ssh连接
